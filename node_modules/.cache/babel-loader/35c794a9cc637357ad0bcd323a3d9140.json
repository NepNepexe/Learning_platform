{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/babel-loader/lib/index.js!/Users/xiekun/Pictures/sabi/dasabi/src/api/axios.js","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/api/axios.js","mtime":1592530540364},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBRcyBmcm9tICdxcyc7CmltcG9ydCB7IGdldFN0b3JlIH0gZnJvbSAnQC9saWJzL2xvY2Fsc3RvcmFnZSc7IC8vIOi2heaXtuiuvuWumgoKYXhpb3MuZGVmYXVsdHMudGltZW91dCA9IDE1MDAwOwpheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gIi94ayI7IC8vaHR0cCByZXF1ZXN0IOaLpuaIquWZqAoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyKSB7CiAgTWVzc2FnZSh7CiAgICBtZXNzYWdlOiAn6K+35rGC6LaF5pe2JywKICAgIHR5cGU6ICdlcnJvcicKICB9KTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8vIGh0dHAgcmVzcG9uc2Ug5oum5oiq5ZmoCgpheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgLy/lpoLmnpzov5Tlm55zdWNjZXNzCiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTsKICB9IC8vIOagueaNrui/lOWbnueahGNvZGXlgLzmnaXlgZrkuI3lkIznmoTlpITnkIYo5ZKM5ZCO56uv57qm5a6aKQoKCiAgc3dpdGNoIChkYXRhLnN0YXR1c0NvZGUpIHsKICAgIGNhc2UgJzQwMSc6CiAgICAgIGNvbnNvbGUubG9nKCc0MDE6JyArIGRhdGEubWVzc2FnZSk7CiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnNDAxJyk7CgogICAgZGVmYXVsdDoKICAgICAgY29uc29sZS5sb2coJ+acquefpemUmeivrycgKyBkYXRhLm1lc3NhZ2UpOwogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ+acquefpemUmeivrycpOwogIH0KfSwgZnVuY3Rpb24gKGVycikgewogIC8v5ZON5bqU5aSx6LSl5pe255qE5aSE55CGCiAgLy8g6L+U5Zue54q25oCB56CB5LiN5Li6MjAw5pe25YCZ55qE6ZSZ6K+v5aSE55CGCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycik7Cn0pOyAvL+WwgeijhSBnZXRSZXF1ZXN0CgpleHBvcnQgZnVuY3Rpb24gZ2V0UmVxdWVzdCh1cmwsIHBhcmFtcykgewogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICdnZXQnLAogICAgdXJsOiAiIi5jb25jYXQodXJsKSwKICAgIHBhcmFtczogcGFyYW1zCiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAnZGVsZXRlJywKICAgIHVybDogIiIuY29uY2F0KHVybCwgIj9pZD0iKSArIHBhcmFtcywKICAgIGRhdGE6IHsKICAgICAgaWQ6IHBhcmFtcwogICAgfQogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBwb3N0UmVxdWVzdCh1cmwsIHBhcmFtcykgewogIHZhciB0b2tlbiA9IGdldFN0b3JlKCJ0b2tlbiIpOwogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICdwb3N0JywKICAgIHVybDogIiIuY29uY2F0KHVybCksCiAgICBkYXRhOiBwYXJhbXMsCiAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgcmV0dXJuIFFzLnN0cmluZ2lmeShkYXRhLCB7CiAgICAgICAgYWxsb3dEb3RzOiB0cnVlCiAgICAgIH0pOwogICAgfV0sCiAgICBoZWFkZXJzOiB7CiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKICAgICAgJ3Rva2VuJzogdG9rZW4KICAgIH0KICB9KTsKfSAvL+WwgeijhSBwb3N0UmVxdWVzdC1qc29u5pWw5o2u5qC85byPCgpleHBvcnQgZnVuY3Rpb24gcG9zdEpzb25SZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgdmFyIHRva2VuID0gZ2V0U3RvcmUoInRva2VuIik7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgdXJsOiAiIi5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtcywKICAgIGhlYWRlcnM6IHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ3Rva2VuJzogdG9rZW4KICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["/Users/xiekun/Pictures/sabi/dasabi/src/api/axios.js"],"names":["axios","Qs","getStore","defaults","timeout","baseURL","interceptors","request","use","config","err","Message","message","type","Promise","reject","response","data","success","resolve","statusCode","console","log","getRequest","url","params","method","deleteRequest","id","postRequest","token","transformRequest","stringify","allowDots","headers","postJsonRequest"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Qs from 'qs'\nimport {getStore} from '@/libs/localstorage'\n\n// 超时设定\naxios.defaults.timeout = 15000\naxios.defaults.baseURL = \"/xk\";\n\n//http request 拦截器\naxios.interceptors.request.use(config => {\n  return config\n}, err => {\n  Message({message: '请求超时', type: 'error'})\n  return Promise.reject(err)\n})\n\n// http response 拦截器\naxios.interceptors.response.use(response => {\n  \n  const data = response.data;\n  if(data.success){//如果返回success\n    return Promise.resolve(response)\n  }\n\n  // 根据返回的code值来做不同的处理(和后端约定)\n  switch (data.statusCode) {\n    case '401':\n      console.log('401:'+data.message)\n      return Promise.reject('401')\n    default:\n      console.log('未知错误'+data.message)\n      return Promise.reject('未知错误')\n  }\n\n}, (err) => { //响应失败时的处理\n  // 返回状态码不为200时候的错误处理\n  return Promise.reject(err)\n})\n\n//封装 getRequest\nexport function  getRequest(url, params) {\n \n  return axios({\n    method: 'get',\n    url: `${url}`,\n    params: params\n    \n  })\n}\n\nexport function  deleteRequest(url, params) {\n \n  return axios({\n    method: 'delete',\n    url: `${url}?id=`+params,\n    data: {id:params}\n    \n  })\n}\n\nexport function postRequest(url,params) {\n   let token = getStore(\"token\")\n  return axios({\n    method: 'post',\n    url: `${url}`,\n    data :params,\n    transformRequest: [function (data) { \n      return Qs.stringify(data, {allowDots: true}) \n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'token': token\n    }\n  })\n}\n\n//封装 postRequest-json数据格式\nexport function postJsonRequest (url,params) {\n  let token = getStore(\"token\")\n   return axios({\n     method:'post',\n     url: `${url}`,\n     data :params,\n     headers: {\n      'Content-Type': 'application/json',\n      'token': token\n     }\n   })\n}\n\n\n"]}]}