{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/babel-loader/lib/index.js!/Users/xiekun/Pictures/sabi/dasabi/src/api/axios.js","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/api/axios.js","mtime":1592961464527},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBRcyBmcm9tICdxcyc7CmltcG9ydCB7IGdldFN0b3JlIH0gZnJvbSAnQC9saWJzL2xvY2Fsc3RvcmFnZSc7IC8vIOi2heaXtuiuvuWumgoKYXhpb3MuZGVmYXVsdHMudGltZW91dCA9IDE1MDAwOwpheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gIi94ayI7IC8vaHR0cCByZXF1ZXN0IOaLpuaIquWZqAoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyKSB7CiAgTWVzc2FnZSh7CiAgICBtZXNzYWdlOiAn6K+35rGC6LaF5pe2JywKICAgIHR5cGU6ICdlcnJvcicKICB9KTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8vIGh0dHAgcmVzcG9uc2Ug5oum5oiq5ZmoCgpheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgLy/lpoLmnpzov5Tlm55zdWNjZXNzCiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTsKICB9IC8vIOagueaNrui/lOWbnueahGNvZGXlgLzmnaXlgZrkuI3lkIznmoTlpITnkIYo5ZKM5ZCO56uv57qm5a6aKQoKCiAgc3dpdGNoIChkYXRhLnN0YXR1c0NvZGUpIHsKICAgIGNhc2UgJzQwMSc6CiAgICAgIGNvbnNvbGUubG9nKCc0MDE6JyArIGRhdGEubWVzc2FnZSk7CiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChkYXRhLm1lc3NhZ2UpOwoKICAgIGRlZmF1bHQ6CiAgICAgIGNvbnNvbGUubG9nKCfmnKrnn6XplJnor6/vvJonICsgZGF0YS5tZXNzYWdlKTsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGRhdGEubWVzc2FnZSk7CiAgfQp9LCBmdW5jdGlvbiAoZXJyKSB7CiAgLy/lk43lupTlpLHotKXml7bnmoTlpITnkIYKICAvLyDov5Tlm57nirbmgIHnoIHkuI3kuLoyMDDml7blgJnnmoTplJnor6/lpITnkIYKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8v5bCB6KOFIGdldFJlcXVlc3QKCmV4cG9ydCBmdW5jdGlvbiBnZXRSZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ2dldCcsCiAgICB1cmw6ICIiLmNvbmNhdCh1cmwpLAogICAgcGFyYW1zOiBwYXJhbXMKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gZGVsZXRlUmVxdWVzdCh1cmwsIHBhcmFtcykgewogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICdkZWxldGUnLAogICAgdXJsOiAiIi5jb25jYXQodXJsLCAiP2lkPSIpICsgcGFyYW1zLAogICAgZGF0YTogewogICAgICBpZDogcGFyYW1zCiAgICB9CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHBvc3RSZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgdmFyIHRva2VuID0gZ2V0U3RvcmUoInRva2VuIik7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgdXJsOiAiIi5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtcywKICAgIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gUXMuc3RyaW5naWZ5KGRhdGEsIHsKICAgICAgICBhbGxvd0RvdHM6IHRydWUKICAgICAgfSk7CiAgICB9XSwKICAgIGhlYWRlcnM6IHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLAogICAgICAndG9rZW4nOiB0b2tlbgogICAgfQogIH0pOwp9IC8v5bCB6KOFIHBvc3RSZXF1ZXN0LWpzb27mlbDmja7moLzlvI8KCmV4cG9ydCBmdW5jdGlvbiBwb3N0SnNvblJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICB2YXIgdG9rZW4gPSBnZXRTdG9yZSgidG9rZW4iKTsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAncG9zdCcsCiAgICB1cmw6ICIiLmNvbmNhdCh1cmwpLAogICAgZGF0YTogcGFyYW1zLAogICAgaGVhZGVyczogewogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAndG9rZW4nOiB0b2tlbgogICAgfQogIH0pOwp9"},{"version":3,"sources":["/Users/xiekun/Pictures/sabi/dasabi/src/api/axios.js"],"names":["axios","Qs","getStore","defaults","timeout","baseURL","interceptors","request","use","config","err","Message","message","type","Promise","reject","response","data","success","resolve","statusCode","console","log","getRequest","url","params","method","deleteRequest","id","postRequest","token","transformRequest","stringify","allowDots","headers","postJsonRequest"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Qs from 'qs'\nimport { getStore } from '@/libs/localstorage'\n\n// 超时设定\naxios.defaults.timeout = 15000\naxios.defaults.baseURL = \"/xk\";\n\n//http request 拦截器\naxios.interceptors.request.use(config => {\n  return config\n}, err => {\n  Message({ message: '请求超时', type: 'error' })\n  return Promise.reject(err)\n})\n\n// http response 拦截器\naxios.interceptors.response.use(response => {\n\n  const data = response.data;\n  if (data.success) {//如果返回success\n    return Promise.resolve(response)\n  }\n\n  // 根据返回的code值来做不同的处理(和后端约定)\n  switch (data.statusCode) {\n    case '401':\n      console.log('401:' + data.message)\n      return Promise.reject(data.message)\n    default:\n      console.log('未知错误：' + data.message)\n      return Promise.reject(data.message)\n  }\n\n}, (err) => { //响应失败时的处理\n  // 返回状态码不为200时候的错误处理\n  return Promise.reject(err)\n})\n\n//封装 getRequest\nexport function getRequest(url,params) {\n\n  return axios({\n    method: 'get',\n    url: `${url}`,\n    params: params\n\n  })\n}\n\nexport function deleteRequest(url, params) {\n\n  return axios({\n    method: 'delete',\n    url: `${url}?id=` + params,\n    data: { id: params }\n\n  })\n}\n\nexport function postRequest(url, params) {\n  let token = getStore(\"token\")\n  return axios({\n    method: 'post',\n    url: `${url}`,\n    data: params,\n    transformRequest: [function (data) {\n      return Qs.stringify(data, { allowDots: true })\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'token': token\n    }\n  })\n}\n\n\n\n//封装 postRequest-json数据格式\nexport function postJsonRequest(url, params) {\n  let token = getStore(\"token\")\n  return axios({\n    method: 'post',\n    url: `${url}`,\n    data: params,\n    headers: {\n      'Content-Type': 'application/json',\n      'token': token\n    }\n  })\n}\n\n\n"]}]}