{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/babel-loader/lib/index.js!/Users/xiekun/Pictures/sabi/dasabi/src/libs/mixin.js","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/libs/mixin.js","mtime":1593668399409},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3hpZWt1bi9QaWN0dXJlcy9zYWJpL2Rhc2FiaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CnZhciBteU1ldGhvZHMgPSB7CiAgdG9hc3Q6IGZ1bmN0aW9uIHRvYXN0KG1zZywgdHlwZSkgewogICAgdmFyIHN0clR5cGUgPSAic3VjY2VzcyI7CgogICAgc3dpdGNoICh0eXBlKSB7CiAgICAgIGNhc2UgMToKICAgICAgICBzdHJUeXBlID0gInN1Y2Nlc3MiOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAyOgogICAgICAgIHN0clR5cGUgPSAiZXJyb3IiOwogICAgICAgIGJyZWFrOwoKICAgICAgZGVmYXVsdDoKICAgICAgICBzdHJUeXBlID0gInN1Y2Nlc3MiOwogICAgfQoKICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICBtZXNzYWdlOiBtc2csCiAgICAgIHR5cGU6IHN0clR5cGUKICAgIH0pOwogIH0sCiAgbmF2aWdhdG9yOiBmdW5jdGlvbiBuYXZpZ2F0b3IodXJsKSB7CiAgICB0aGlzLiRyb3V0ZXIucHVzaCh1cmwpOwogIH0sCiAgY2xvbmU6IGZ1bmN0aW9uIGNsb25lKG9iaikgewogICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1peDogJ21peCcKICAgIH07CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBteU1ldGhvZHMpCn07"},{"version":3,"sources":["/Users/xiekun/Pictures/sabi/dasabi/src/libs/mixin.js"],"names":["myMethods","toast","msg","type","strType","$message","message","navigator","url","$router","push","clone","obj","JSON","parse","stringify","data","mix","methods"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,KADc,iBACRC,GADQ,EACJC,IADI,EACC;AACX,QAAIC,OAAO,GAAG,SAAd;;AACA,YAAOD,IAAP;AACI,WAAK,CAAL;AACIC,QAAAA,OAAO,GAAG,SAAV;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,OAAO,GAAG,OAAV;AACA;;AACJ;AACIA,QAAAA,OAAO,GAAG,SAAV;AARR;;AAUA,SAAKC,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAEJ,GADC;AAEVC,MAAAA,IAAI,EAAEC;AAFI,KAAd;AAIH,GAjBa;AAkBdG,EAAAA,SAlBc,qBAkBJC,GAlBI,EAkBA;AACV,SAAKC,OAAL,CAAaC,IAAb,CAAkBF,GAAlB;AACH,GApBa;AAqBdG,EAAAA,KArBc,iBAqBRC,GArBQ,EAqBH;AACP,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACH;AAvBa,CAAlB;AA0BA,eAAe;AACXI,EAAAA,IADW,kBACL;AAEF,WAAO;AACJC,MAAAA,GAAG,EAAE;AADD,KAAP;AAIH,GAPU;AAQXC,EAAAA,OAAO,oBACAlB,SADA;AARI,CAAf","sourcesContent":["const myMethods = {\n    toast(msg,type){\n        let strType = \"success\"\n        switch(type){\n            case 1:\n                strType = \"success\"\n                break\n            case 2:\n                strType = \"error\"\n                break  \n            default:\n                strType = \"success\"    \n        } \n        this.$message({\n            message: msg,\n            type: strType\n        })\n    },\n    navigator(url){\n        this.$router.push(url)\n    },\n    clone(obj) {\n        return JSON.parse(JSON.stringify(obj))\n    },\n}\n\nexport default {\n    data(){\n\n        return {\n           mix: 'mix',\n         \n        }\n    },\n    methods: {\n        ...myMethods\n    },\n}"]}]}