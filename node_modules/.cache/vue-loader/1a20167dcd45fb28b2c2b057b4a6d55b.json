{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiekun/Pictures/sabi/dasabi/src/views/login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/views/login.vue","mtime":1592961464531},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxvZ2luX2hlYWRlciBzcGFuIHsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuUA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"login-box\">\n    <div class=\"login_header\">\n      <span @click=\"cur=0\" :class=\"{active:cur==0}\">账号登录</span>\n      <span @click=\"cur=1\" :class=\"{active:cur==1}\">快捷登录</span>\n    </div>\n    <div v-show=\"cur==0\">\n      <h1 class=\"h1\">账号登录</h1>\n      <el-form\n        ref=\"loginForm\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        class=\"login-form\"\n        autocomplete=\"on\"\n        label-position=\"left\"\n      >\n        <el-form-item class=\"login-form-item\" prop=\"username\">\n          <el-input\n            ref=\"username\"\n            v-model=\"loginForm.username\"\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"text\"\n            tabindex=\"1\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-user\"\n          />\n        </el-form-item>\n\n        <el-form-item class=\"login-form-item\" prop=\"password\">\n          <el-input\n            :key=\"passwordType\"\n            ref=\"password\"\n            v-model=\"loginForm.password\"\n            :type=\"passwordType\"\n            placeholder=\"Password\"\n            name=\"password\"\n            tabindex=\"2\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-lock\"\n            @keyup.enter.native=\"handleLogin\"\n          />\n        </el-form-item>\n\n        <!--  邮箱登陆\n       <el-form-item prop=\"email\">\n        <span class=\"svg-container\">\n          <svg-icon icon-class=\"email\" />\n        </span>\n        <el-input\n          ref=\"email\"\n          v-model=\"loginForm.email\"\n          placeholder=\"email\"\n          name=\"email\"\n          type=\"text\"\n          tabindex=\"1\"\n          autocomplete=\"on\"\n        />\n        </el-form-item>-->\n\n        <el-button\n          :loading=\"loading\"\n          type=\"primary\"\n          style=\"width:100%;margin-bottom:30px;\"\n          @click.native.prevent=\"handleLogin\"\n        >Login</el-button>\n      </el-form>\n    </div>\n\n    <div v-show=\"cur==1\" class=\"Cbody_item\">\n      <h1 class=\"h1\">快捷登录</h1>\n      <el-form\n        ref=\"phoneForm\"\n        :model=\"phoneForm\"\n        :rules=\"phoneRules\"\n        class=\"login-form\"\n        autocomplete=\"on\"\n        label-position=\"left\"\n      >\n        <!-- 手机部分 -->\n        <el-form-item class=\"login-form-item\" prop=\"tel\">\n          <el-input\n            ref=\"tel\"\n            v-model=\" phoneForm.tel\"\n            placeholder=\"tel\"\n            name=\"tel\"\n            type=\"text\"\n            tabindex=\"1\"\n            autocomplete=\"on\"\n          />\n        </el-form-item>\n\n        <el-form-item class=\"login-form-item\">\n          <el-input\n            placeholder=\"请输入验证码:\"\n            style=\"width:230px\"\n            ref=\"phonecode\"\n            v-model=\"phoneForm.phonecode\"\n            name=\"phonecode\"\n            type=\"text\"\n            tabindex=\"1\"\n            autocomplete=\"on\"\n          />\n          <el-button type=\"text\" :disabled=\"disabled\" @click=\"sendcode\">{{btntxt}}</el-button>\n        </el-form-item>\n\n        <el-button\n          :loading=\"loading\"\n          type=\"primary\"\n          style=\"width:100%;margin-bottom:30px;\"\n          @click.native.prevent=\"submitphone\"\n        >Login</el-button>\n      </el-form>\n    </div>\n\n    <Vcode :show=\"isShow\" @success=\"success\" @close=\"close\" />\n  </div>\n</template>\n\n<script>\nimport Vcode from \"vue-puzzle-vcode\";\nimport { login, loginbyphone, sendcodebyphone } from \"@/api/modules/user\";\nexport default {\n  name: \"login\",\n  data() {\n    var checkLength = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"用户名不能为空\"));\n      }\n\n      if (value.length >= 5) {\n        callback();\n      } else {\n        callback(new Error(\"用户名长度要大于5\"));\n      }\n    };\n\n    //邮箱验证\n    var userEmail = (rule, value, callback) => {\n      const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\n\n      if (!value) {\n        return callback(new Error(\"邮箱不能为空\"));\n      }\n      setTimeout(() => {\n        if (mailReg.test(value)) {\n          callback();\n        } else {\n          callback(new Error(\"请输入正确的邮箱格式\"));\n        }\n      }, 100);\n    };\n\n    //手机验证\n    var checkPhone = (rule, value, callback) => {\n      const phoneReg = 11 && /^((13|14|15|17|18)[0-9]{1}\\d{8})$/;\n      this.disabled = true;\n      this.btntxt = \"\";\n      this.time = 0;\n      if (!value) {\n        return callback(new Error(\"电话号码不能为空\"));\n      }\n      setTimeout(() => {\n        // Number.isInteger是es6验证数字是否为整数的方法,实际输入的数字总是识别成字符串\n        // 所以在前面加了一个+实现隐式转换\n\n        if (!Number.isInteger(+value)) {\n          callback(new Error(\"请输入数字值\"));\n        } else {\n          if (phoneReg.test(value)) {\n            this.time = 60;\n            this.btntxt = \"获取验证码\";\n            this.disabled = false;\n            callback();\n          } else {\n            callback(new Error(\"电话号码格式不正确\"));\n          }\n        }\n      }, 100);\n    };\n\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n       \n      },\n      phoneForm: {\n        tel: \"\", //手机号\n        phonecode: \"\" //手机号验证码\n      },\n      loginRules: {\n        username: { validator: checkLength, trigger: \"blur\" },\n        password: { required: true, message: \"密码不能为空\", trigger: \"blur\" },\n        email: { validator: userEmail, trigger: \"blur\" }\n      },\n      phoneRules: {\n        tel: { validator: checkPhone, trigger: \"blur\" }\n      },\n      isShow: false, // 验证码模态框是否出现\n      loading: false,\n      passwordType: \"password\",\n      redirect: undefined,\n      time: 0, //验证码时间\n      btntxt: \"\",\n      disabled: true,\n      cur: 0 //默认选中第一个tab\n    };\n  },\n\n  components: {\n    Vcode\n  },\n\n  methods: {\n    showPwd() {\n      if (this.passwordType === \"password\") {\n        this.passwordType = \"\";\n      } else {\n        this.passwordType = \"password\";\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus();\n      });\n    },\n\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.isShow = true; //显示验证码模态框\n          loginbyphone(this.phoneForm)\n            .then(resp => {\n              if (resp.data.statusCode === \"200\") {\n                this.toast(resp.data.message, 1);\n              }\n            })\n            .catch(data => {\n              this.toast(data, 2);\n            });\n        }\n      });\n    },\n\n    // 用户通过了验证\n    success(msg) {\n      this.isShow = false; // 通过验证后，需要手动隐藏模态框\n      this.loading = false;\n      login(this.loginForm)\n        .then(resp => {\n          let token = resp.data.data.token;\n          // setStore(\"token\",token)\n\n          let user = resp.data.data.user;\n          console.log(user);\n          // setCookie(\"user\",user)\n\n          if (resp.data.statusCode === \"200\") {\n            this.toast(resp.data.message, 1);\n\n            this.navigator(\"/Home\");\n          }\n        })\n        .catch(data => {\n          this.toast(data, 2);\n        });\n    },\n    // 用户点击遮罩层，应该关闭模态框\n    close() {\n      this.isShow = false;\n      this.loading = false;\n    },\n\n    sendcode() {\n      this.time = 20;\n      this.timer();\n      //发送手机验证码\n      sendcodebyphone({tel : this.phoneForm.tel})\n        .then(resp => {\n          if (resp.data.statusCode === \"200\") {\n            this.toast(resp.data.message, 1);\n          }\n        })\n        .catch(data => {\n          this.toast(data, 2);\n        });\n    },\n    timer() {\n      if (this.time > 0) {\n        this.time--;\n        this.btntxt = this.time + \"s后重新获取\";\n        setTimeout(this.timer, 1000);\n      } else {\n        this.time = 0;\n        this.btntxt = \"获取验证码\";\n        this.disabled = false;\n      }\n    },\n\n    //提交手机验证码\n    submitphone() {\n      loginByTel({\n        tel: this.phoneForm.phone,\n        inputCode: this.phoneForm.phonecode\n      })\n        .then(resp => {\n          if (resp.data.statusCode === \"200\") {\n            this.toast(resp.data.message, 1);\n            if(resp.data.data == 1){//1 表示新用户 跳转到信息完善界面            \n              //后续的信息完善界面\n              console.log(\"跳转到信息完善界面\");\n            }else {\n              this.navigator(\"/Home\");\n            }\n          }else {\n            this.toast(resp.data.message, 2);\n          }\n        })\n        .catch(data => {\n          this.toast(data, 2);\n        });\n    }\n  }\n};\n</script>\n\n<style  lang=\"scss\">\n.login_header span {\n  margin-right: 20px;\n  cursor: pointer;\n}\n</style>"]}]}