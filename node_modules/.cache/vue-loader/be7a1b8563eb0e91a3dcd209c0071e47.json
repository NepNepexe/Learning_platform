{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiekun/Pictures/sabi/dasabi/src/views/infoRefine.vue?vue&type=style&index=0&id=56fe4e56&lang=scss&scoped=true&","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/views/infoRefine.vue","mtime":1593211425918},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgyIHsKICBjb2xvcjogIzI4OTdmZjsKfQoKLmluZm9SZWZpbmUtY29udGFpbmVyIHsKICBtYXJnaW46IDUwcHggYXV0bzsKICBoZWlnaHQ6IDY1MHB4OwogIHdpZHRoOiAxMDAwcHg7CiAgYm9yZGVyOiBzb2xpZCAxcHggbm9uZTsKICBib3JkZXItcmFkaXVzOiAyMHB4OwogIGJveC1zaGFkb3c6ICNkNWRhZGYgNnB4IDlweCAzM3B4IDVweDsKfQoKLmltZ0NvbnRhaW5lciB7CiAgZmxvYXQ6IGxlZnQ7CiAgaGVpZ2h0OiA2NTBweDsKICB3aWR0aDogNDAwcHg7Cn0KCi5pbWdDb250YWluZXIgaW1nIHsKICBib3JkZXI6IHNvbGlkIDFweCBub25lOwogIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDIwcHg7CiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjBweDsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7Cn0KCi5pbnB1dEZvcm0gewogIGZsb2F0OiBsZWZ0OwogIGhlaWdodDogNjUwcHg7CiAgd2lkdGg6IDQ3MHB4OwogIHBhZGRpbmc6IDBweCA2NXB4Owp9Cg=="},{"version":3,"sources":["infoRefine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"infoRefine.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"infoRefine-container\">\n    <div class=\"imgContainer\">\n      <img src=\"../assets/infoRefineImg.jpg\" alt />\n    </div>\n    <div class=\"inputForm\">\n      <h2>个人信息完善</h2>\n      <el-form ref=\"refineForm\" label-width=\"80px\" :model=\"refineForm\" :rules=\"refineRules\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"refineForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"refineForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input\n            ref=\"email\"\n            v-model=\"refineForm.email\"\n            name=\"email\"\n            type=\"text\"\n            autocomplete=\"on\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"tel\">\n          <el-input v-model=\"refineForm.tel\" disabled></el-input>\n        </el-form-item>\n      </el-form>\n      <el-button type=\"primary\" round @click=\"updateInfo\">进入平台</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vcode from \"vue-puzzle-vcode\";\nimport { refineInfo } from \"@/api/modules/user\";\n\nexport default {\n  name: \"infoRefine\",\n  data() {\n    //用户名验证\n    var checkLength = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"用户名不能为空\"));\n      }\n\n      if (value.length >= 5) {\n        callback();\n      } else {\n        callback(new Error(\"长度不能小于5\"));\n      }\n    };\n    //密码验证\n    var checkPassword = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"密码不能为空\"));\n      }\n\n      if (value.length >= 5) {\n        callback();\n      } else {\n        callback(new Error(\"长度不能小于6位\"));\n      }\n    };\n    //邮箱验证\n    var userEmail = (rule, value, callback) => {\n      const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\n      // if (!value) {\n      //   return callback();\n      // }\n      if (!value) {\n        return callback(new Error(\"邮箱不能为空\"));\n      }\n      setTimeout(() => {\n        if (mailReg.test(value)) {\n          callback();\n        } else {\n          callback(new Error(\"请输入正确的邮箱格式\"));\n        }\n      }, 100);\n    };\n\n    return {\n      refineForm: {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        tel: this.$route.query.tel //接收上一个界面传来的参数\n      },\n      refineRules: {\n        username: { validator: checkLength, trigger: \"blur\" },\n        password: { validator: checkPassword, trigger: \"blur\"},\n        email: { validator: userEmail, trigger: \"blur\" }\n      }\n    };\n  },\n  methods: {\n    updateInfo() {\n      //   this.$refs.refineForm.validate(valid => {\n      //     if (valid) {\n      //   refineInfo(this.refineForm)\n      refineInfo({\n        username: this.refineForm.username,\n        password: this.refineForm.password,\n        email: this.refineForm.email,\n        tel: this.refineForm.tel\n      })\n        .then(resp => {\n          this.toast(resp.data.message, 1);\n          this.navigator(\"/Home\");\n        })\n        .catch(data => {\n          this.toast(data, 2);\n        });\n      //     }\n      //   });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\nh2 {\n  color: #2897ff;\n}\n\n.infoRefine-container {\n  margin: 50px auto;\n  height: 650px;\n  width: 1000px;\n  border: solid 1px none;\n  border-radius: 20px;\n  box-shadow: #d5dadf 6px 9px 33px 5px;\n}\n\n.imgContainer {\n  float: left;\n  height: 650px;\n  width: 400px;\n}\n\n.imgContainer img {\n  border: solid 1px none;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  height: 100%;\n  width: 100%;\n}\n\n.inputForm {\n  float: left;\n  height: 650px;\n  width: 470px;\n  padding: 0px 65px;\n}\n</style>\n\n\n"]}]}