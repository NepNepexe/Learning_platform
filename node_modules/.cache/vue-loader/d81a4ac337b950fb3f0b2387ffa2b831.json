{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiekun/Pictures/sabi/dasabi/src/views/register.vue?vue&type=template&id=77453986&","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/views/register.vue","mtime":1593668399411},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}