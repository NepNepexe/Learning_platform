{"remainingRequest":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiekun/Pictures/sabi/dasabi/src/views/register.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/xiekun/Pictures/sabi/dasabi/src/views/register.vue","mtime":1593668399411},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiekun/Pictures/sabi/dasabi/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW5faGVhZGVyIHNwYW4gewogIGN1cnNvcjogcG9pbnRlcjsKfQouYWN0aXZlIHsKICBjb2xvcjogIzI5OGFkYjsKfQouYmFjazJsb2dpbiB7CiAgY3Vyc29yOiBwb2ludGVyOwogIGNvbG9yOiAjMjk4YWRiOwogIGZsb2F0OiByaWdodDsKICBwYWRkaW5nLWJvdHRvbTogMzBweDsKICBmb250LXNpemU6IDE4cHg7Cn0KLmJveC1jYXJkIHsKICBtYXJnaW46IDAgYXV0bzsKICB3aWR0aDogNDgwcHg7Cn0KLm15TG9naW5VSSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICBtYXJnaW46IC0yODBweCAwIDAgLTI0MHB4OwogIHdpZHRoOiA0ODBweDsKfQo="},{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div style=\"background-color: #f7f7f7\">\n    <span class=\"til\" >Dasabi</span>\n    <span style=\"border-left:solid 1px #d9d9d9;margin-left: 70px;font-size: 50px;padding-left: 40px;color: grey\">注册</span>\n    </div>\n\n\n    <div style=\"background-image: -webkit-linear-gradient(90deg, #3a4457, #F6EAB8);width: 100%;position: fixed;height: 100%;top: 90px;left: 0px\">\n    </div>\n  <div class=\"myLoginUI\">\n    <el-card class=\"box-card\">\n      <h1 class=\"h1\">注册</h1>\n      <el-form\n        ref=\"registerForm\"\n        :model=\"registerForm\"\n        :rules=\"registerRules\"\n        class=\"register-form\"\n        autocomplete=\"on\"\n        label-position=\"left\"\n      >\n        <el-form-item class=\"register-form-item\" prop=\"username\">\n          <el-input\n            ref=\"username\"\n            v-model=\"registerForm.username\"\n            placeholder=\"请输入用户名\"\n            name=\"username\"\n            type=\"text\"\n            tabindex=\"1\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-user\"\n          />\n        </el-form-item>\n\n        <el-form-item class=\"register-form-item\" prop=\"password\">\n          <el-input\n            :key=\"passwordType\"\n            ref=\"password\"\n            v-model=\"registerForm.password\"\n            placeholder=\"请输入密码\"\n            name=\"password\"\n            :type=\"passwordType\"\n            tabindex=\"2\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-lock\"\n          />\n        </el-form-item>\n\n        <el-form-item class=\"register-form-item\" prop=\"passwordAgain\">\n          <el-input\n            :key=\"passwordType\"\n            ref=\"passwordAgain\"\n            v-model=\"registerForm.passwordAgain\"\n            placeholder=\"请确认密码\"\n            name=\"passwordAgain\"\n            :type=\"passwordType\"\n            tabindex=\"3\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-lock\"\n          />\n        </el-form-item>\n\n        <el-form-item prop=\"email\">\n          <el-input\n            ref=\"email\"\n            v-model=\"registerForm.email\"\n            placeholder=\"请输入邮箱\"\n            name=\"email\"\n            type=\"text\"\n            tabindex=\"4\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-message\"\n          />\n        </el-form-item>\n\n        <el-form-item prop=\"emailCode\">\n          <el-input\n            ref=\"emailCode\"\n            v-model=\"registerForm.emailCode\"\n            placeholder=\"请输入邮箱验证码\"\n            name=\"emailCode\"\n            type=\"text\"\n            tabindex=\"5\"\n            autocomplete=\"on\"\n            prefix-icon=\"el-icon-chat-dot-square\"\n            style=\"width: 67%; float: left;\"\n          />\n          <el-button\n            type=\"primary\"\n            plain\n            style=\"float: right\"\n            :disabled=\"disabled\"\n            @click=\"getEmailCode()\"\n          >{{btntxt}}</el-button>\n        </el-form-item>\n\n        <el-button\n          :loading=\"loading\"\n          type=\"primary\"\n          style=\"width:100%;margin-bottom:20px;\"\n          @click.native.prevent=\"handleRegister\"\n        >注册</el-button>\n      </el-form>\n      <span class=\"back2login\" @click=\"back2login\">返回登录</span>\n\n      <Vcode :show=\"isShow\" @success=\"success\" @close=\"close\" />\n    </el-card>\n  </div>\n  </div>\n</template>\n\n<script>\nimport Vcode from \"vue-puzzle-vcode\";\nimport { sendEmailCode, register } from \"@/api/modules/user\";\nexport default {\n  name: \"register\",\n  data() {\n    var checkLength = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"用户名不能为空\"));\n      }\n\n      if (value.length >= 5) {\n        callback();\n      } else {\n        callback(new Error(\"长度不能小于5\"));\n      }\n    };\n\n    var checkPassword = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error(\"密码不能为空\"));\n      }\n\n      if (value.length >= 5) {\n        callback();\n      } else {\n        callback(new Error(\"长度不能小于6位\"));\n      }\n    };\n\n    var checkPasswordAgain = (rule, value, callback) => {\n      let password = this.$refs.password.value;\n      if (!value) {\n        return callback(new Error(\"确认密码不能为空\"));\n      } else {\n        if (value != password) {\n          return callback(new Error(\"两次输入密码不一致\"));\n        }\n        callback();\n      }\n    };\n\n    //邮箱格式验证\n    var userEmail = (rule, value, callback) => {\n      const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\n\n      if (!value) {\n        return callback(new Error(\"邮箱不能为空\"));\n      }\n      setTimeout(() => {\n        if (mailReg.test(value)) {\n          callback();\n        } else {\n          callback(new Error(\"请输入正确的邮箱格式\"));\n        }\n      }, 100);\n    };\n\n    return {\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        confirmpassword: \"\",\n        email: \"\",\n        emailCode: \"\",\n        etc: {}\n      },\n      registerRules: {\n        username: { validator: checkLength, trigger: \"blur\" },\n        password: { validator: checkPassword, trigger: \"blur\" },\n        passwordAgain: { validator: checkPasswordAgain, trigger: \"blur\" },\n        email: { validator: userEmail, trigger: \"blur\" },\n        emailCode: {\n          required: true,\n          message: \"验证码不能为空\",\n          trigger: \"blur\"\n        }\n      },\n      isShow: false, // 验证码模态框是否出现\n      loading: false,\n      passwordType: \"password\",\n      redirect: undefined,\n      time: 0, //验证码时间\n      btntxt: \"获取验证码\",\n      disabled: false,\n      type: \"0\" //邮件类型\n    };\n  },\n\n  components: {\n    Vcode\n  },\n\n  methods: {\n    // 点击注册按钮弹出图片验证\n    handleRegister() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          console.log(\"通过了表单验证\");\n          this.loading = true;\n          this.isShow = true; //显示验证码模态框\n        }\n      });\n    },\n\n    // 用户通过了验证\n    success(msg) {\n      this.isShow = false; // 通过验证后，需要手动隐藏模态框\n      this.loading = false;\n\n      //邮箱验证码放入etc\n      var etcinfo = {\n        emailCode: \"\"\n      };\n      etcinfo.emailCode = this.registerForm.emailCode;\n      this.registerForm.etc = JSON.stringify(etcinfo);\n\n      //注册的请求发到后端\n      register(this.registerForm)\n        .then(resp => {\n          this.toast(resp.data.message, 1);\n          this.navigator(\"/Home\");\n        })\n        .catch(data => {\n          this.toast(data, 2);\n        });\n      //\n    },\n    // 用户点击遮罩层，应该关闭模态框\n    close() {\n      this.isShow = false;\n      this.loading = false;\n    },\n\n    // 发送邮箱验证码按钮\n    getEmailCode() {\n      this.$refs.registerForm.validateField(\"email\", err => {\n        if (!err) {\n          this.time = 60;\n          this.timer();\n\n          // 注册邮件\n          this.type = 0;\n\n          // 向后端请求发送验证码\n          sendEmailCode({ email: this.registerForm.email, type: this.type })\n            .then(resp => {\n              this.toast(resp.data.message, 1);\n            })\n            .catch(data => {\n              console.log(data);\n              this.toast(data, 2);\n            });\n        }\n      });\n    },\n\n    // 定时器\n    timer() {\n      if (this.time > 0) {\n        this.time--;\n        this.btntxt = this.time + \"s后重新获取\";\n        this.disabled = true;\n        setTimeout(this.timer, 1000);\n      } else {\n        this.time = 0;\n        this.btntxt = \"获取验证码\";\n        this.disabled = false;\n      }\n    },\n\n    back2login() {\n      this.navigator(\"/login\");\n    }\n  }\n};\n</script>\n\n<style  lang=\"scss\">\n.login_header span {\n  cursor: pointer;\n}\n.active {\n  color: #298adb;\n}\n.back2login {\n  cursor: pointer;\n  color: #298adb;\n  float: right;\n  padding-bottom: 30px;\n  font-size: 18px;\n}\n.box-card {\n  margin: 0 auto;\n  width: 480px;\n}\n.myLoginUI {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -280px 0 0 -240px;\n  width: 480px;\n}\n</style>\n"]}]}